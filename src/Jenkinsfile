import hudson.FilePath

pipeline {
  agent{ label 'mini' }
  environment {
    Cnt = load './lib/Common.groovy'
    ib = "${JOB_BASE_NAME}"   // Имя информационной базы
    DEBUG = false             // Режим отладки
    CLADDR = 'obr-app-11'     // Адрес кластера 1С
    DTpath = 'C:/1c/dt'       // Каталог выгрузки dt файлов
    
    VER1C = '8.3.18.1483'     // Версия платформы 1С
    enCode = '0008'           // Код разрешения сеанса
    notyfyToken = '2djDy2SkydHJ-pE1b1cp5QaBy73yGPXx'
    DPart = Cnt.formatDate(Cnt.TimeNow(), 'yyyy-MM-dd')  // Часть имени DT файла
    DTfile = "${DPart}_${ib}.dt" // Имя DT файла
    DT = "${DTpath}/${DTfile}"   // Полный путь к DT файлу
    FS = ""                      // Строка с размером DT файла
    NOTE = "Start"               // Буферная переменная (не исп.)
  }
  options {
    disableConcurrentBuilds()
    timestamps()
  }
  stages {
    stage('1. Подготовка ИБ (блокировка, удаление сеансов)') {
      steps {
        script {
          withCredentials([usernamePassword(credentialsId: 'ClusterAdmin', passwordVariable: 'clPASSWD', usernameVariable: 'clADMIN')
            , usernamePassword(credentialsId: 'IBadmin', passwordVariable: 'ibPASSWORD', usernameVariable: 'ibADMIN')]) {
            def command = """vrunner session kill --ras ${CLADDR}
              --cluster-admin ${clADMIN} --cluster-pwd ${clPASSWD}
              --ibconnection /s${CLADDR}\\${ib}
              --db ${ib} --db-user ${ibADMIN} --db-pwd ${ibPASSWORD}
              --uccode ${enCode} --v8version ${VER1C}
              """.replaceAll( /\n\s*/, " " )
            
            if ( DEBUG == true ) { 
              bat "echo "+ command + " > COMMAND.1.txt" 
              echo "command: " + command
            }

            bat """chcp 65001
                ${ command } """
          }
        }
      }
    }
    stage ("2. Выгрузка ИБ в dt файл") {
      steps {
        script {
          // Cnt = load './lib/Common.groovy'
          // DPart = Cnt.formatDate(Cnt.TimeNow(), 'yyyy-MM-dd')
          // DTfile = DTpath + "/${DPart}_${ib}.dt"
          TIMES = ["mc_bnu": 7200, "mc_zup": 3600, "mc_uat": 2400]
          timeoutValue = TIMES[ib]
          withCredentials([usernamePassword(credentialsId: 'IBadmin'
            , passwordVariable: 'ibPASSWORD', usernameVariable: 'ibADMIN')]) {
            command = """vrunner dump ${DT} 
              --ibconnection /s${CLADDR}\\${ib}
              --db-user ${ibADMIN} --db-pwd ${ibPASSWORD}
              --uccode ${enCode} --v8version ${VER1C}
            """.replaceAll( /\n\s*/, " " )
            
            if ( DEBUG == true ) { 
              bat "echo "+ command + " > COMMAND.2.txt" 
              echo "command: " + command
            }
            RETURN_STATUS = 1
            
            for (int i = 1; i < 5; ++i) {
              if ( RETURN_STATUS == 0 ) {
                break
              } else {
                echo ">>> ПОПЫТКА " + i.toString() + " timeout: ${timeoutValue} <<<"
                timeout ( time: timeoutValue, unit: 'SECONDS' ) {
                  RETURN_STATUS = bat returnStatus: true,
                      script: " chcp 65001 \n ${command} "
                }
                NOTE = "попыток: ${i.toString()}; RC: ${RETURN_STATUS}"
              }
            }
          }
          pt = new FilePath(Jenkins.getInstanceOrNull().getComputer(env.NODE_NAME).getChannel(), dt)
          dtSize = (double)pt.length()/(1024*1024)
          dtSize = dtSize.round().toString() + ' mb.'
          NOTE = " в файл ${DTfile} (${dtSize}) " + NOTE
        }
      }
    }
  }
  post {
    cleanup { script {
        echo "POST: Снятие блокировки с ИБ"
        withCredentials([usernamePassword(credentialsId: 'ClusterAdmin', passwordVariable: 'clPASSWD', usernameVariable: 'clADMIN')
            , usernamePassword(credentialsId: 'IBadmin', passwordVariable: 'ibPASSWORD', usernameVariable: 'ibADMIN')]) {
            def command = """vrunner session unlock
              --ras ${ CLADDR }
              --cluster-admin ${ clADMIN }
              --cluster-pwd ${ clPASSWD }
              --ibconnection /s${ CLADDR }\\${ ib }
              --db ${ ib } --db-user ${ ibADMIN }
              --db-pwd ${ ibPASSWORD }
              --uccode ${ enCode }
              --v8version ${ VER1C } 
           """.replaceAll( /\n\s*/, " " )

            if ( DEBUG == true ) { 
              bat "echo "+ command + " > COMMAND.P.txt" 
              echo "command: " + command
            }

            bat """chcp 65001>nul
                $command"""
            
        }

    } }
    success {script{

        notifyEvents message: "${BUILD_DISPLAY_NAME} Выгрузка <b>${JOB_BASE_NAME}</b> завершена успешно ${NOTE}",
          token: notyfyToken
    }}
    unsuccessful { script {
      
        notifyEvents message: "${BUILD_DISPLAY_NAME} Выгрузка <b>${JOB_BASE_NAME}</b> завершена с ошибками ${NOTE}", 
          token: notyfyToken
    }}
  }
}


